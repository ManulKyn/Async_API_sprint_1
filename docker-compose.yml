version: '3.3'
services:
  redis:
    container_name: "redis_prod"
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - ./redis_s3:/data

  elasticsearch:
    container_name: "elasticsearch_prod"
    image: elasticsearch:7.7.0
    ports:
      - '9200:9200'
    environment:
      - "discovery.type=single-node"
    volumes:
      - ./esdata_s3:/usr/share/elasticsearch/data

  service:
    container_name: "service_prod"
    build: ./service
    environment:
      REDIS_HOST: ${REDIS_HOST}
      ELASTIC_HOST: ${ELASTIC_HOST}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    depends_on:
      - redis
      - elasticsearch
      - postgres
      - etl
    ports:
      - '8000:8000'
    restart: on-failure


  postgres:
    image: "${DB_IMAGE}"
    container_name: 'postgres'
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - ${DB_PORT}:${DB_PORT}

  etl:
    container_name: 'etl_prod'
    build:
      dockerfile: etl_app/etl.Dockerfile
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      ELASTICSEARCH_HOST: ${ELASTIC_HOST}
    depends_on:
      - postgres
      - elasticsearch
    restart: on-failure


volumes:
  esdata_s3:
  redis_s3:
